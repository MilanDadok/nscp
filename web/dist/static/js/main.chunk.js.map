{"version":3,"sources":["constants/alert.constants.ts","constants/user.constants.ts","components/private-router.tsx","constants/common.constants.ts","constants/module.constants.ts","services/common.service.tsx","constants/query.constants.ts","constants/log.constants.ts","constants/metric.constants.ts","actions/alert.actions.ts","services/user.service.ts","services/module.service.ts","services/query.service.ts","services/log.service.ts","services/metric.service.ts","helpers/history.ts","reducers/authentication.reducer.ts","reducers/common.reducers.ts","reducers/module.reducer.ts","reducers/query.reducer.ts","reducers/log.reducer.ts","reducers/metric.reducer.ts","reducers/index.ts","reducers/registration.reducer.ts","reducers/users.reducer.ts","reducers/alert.reducer.ts","helpers/store.ts","actions/common.actions.ts","actions/user.actions.ts","actions/module.actions.ts","actions/query.actions.ts","actions/log.actions.ts","actions/metric.actions.ts","components/login.tsx","components/navigation/account-button.tsx","components/navigation/navbar.tsx","components/navigation/drawer-link.tsx","components/navigation/drawer.tsx","components/messages.tsx","components/navigation/index.tsx","components/common/page.tsx","components/account/index.tsx","selectors/module.selector.ts","selectors/query.selector.ts","selectors/log.selector.ts","selectors/metric.selector.ts","components/module/toolbar.module.tsx","components/module/enable.module.switch.tsx","components/module/load.module.switch.tsx","components/module/show.module.tsx","components/module/list.module.tsx","components/query/toolbar.query.tsx","components/query/show.query.tsx","components/query/list.query.tsx","components/log/toolbar.log.tsx","components/log/list.log.tsx","components/metric/toolbar.metric.tsx","components/metric/list.metric.tsx","components/welcome.tsx","components/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AlertConstants","UserConstants","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","localStorage","getItem","to","pathname","state","from","location","defaultRequestSet","prefix","REQUEST","concat","SUCCESS","FAILURE","ErrorType","ModuleConstants","LIST","ENABLE","DISABLE","LOAD","UNLOAD","SET_FILTER","QueryConstants","LogConstants","MetricConstants","AlertActions","classCallCheck","this","createClass","key","value","message","type","ERROR","CLEAR","UserService","username","password","requestOptions","method","headers","Content-Type","Authorization","btoa","fetch","getUrl","then","handleResponse","user","setItem","JSON","stringify","removeItem","getGetHeader","mkError","error","arguments","length","undefined","GENERIC","response","text","status","Promise","reject","AUTH","data","parse","ok","logout","statusText","getHeader","token","url","CachedValue","cache","ModuleService","refresh","cachedList","isCached","resolve","get","modules","set","module","name","LogLevels","QueryService","Querys","LogService","logs","MetricService","Metrics","history","createBrowserHistory","userJson","initialState","loggedIn","filterListById","action","map","m","id","queries","log","metrics","rootReducer","combineReducers","authentication","LOGIN_REQUEST","loggingIn","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","registration","REGISTER_REQUEST","registering","REGISTER_SUCCESS","REGISTER_FAILURE","users","alert","objectSpread","loading","visibilityFilter","filter","enabled","loaded","query","metric","store","createStore","applyMiddleware","thunkMiddleware","defaultNSCPHandler","exec","request","success","failure","dispatch","result","console","UserActions","validateCredentials","login","push","originalError","ping","ModuleActions","list","unload","load","disable","enable","QueryActions","LogActions","MetricActions","useStyles","makeStyles","theme","createStyles","card","display","flexWrap","justifyContent","margin","padding","maxWidth","spacing","Login","connect","classes","_React$useState","React","useState","showPassword","_React$useState2","slicedToArray","values","setValues","handleChange","event","defineProperty","target","Card","className","noValidate","autoComplete","CardHeader","title","subheader","CardContent","FormControl","InputLabel","htmlFor","Input","required","onChange","startAdornment","InputAdornment","position","AccountCircle_default","endAdornment","IconButton","aria-label","onClick","Visibility_default","VisibilityOff_default","CardActions","Grid","container","alignItems","justify","direction","Button","size","color","root","flexGrow","menuButton","marginRight","AccountButton","useTheme","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","handleClose","aria-controls","aria-haspopup","currentTarget","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","react_router_dom","style","textDecoration","MenuItem","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","hide","toolbar","mixins","NavBar","AppBar","clsx","drawerOpen","Toolbar","setDrawerOpen","edge","Menu_default","Typography","variant","noWrap","DrawerLink","ListItem","button","ListItemIcon","icon","ListItemText","primary","flexShrink","drawerClose","overflowX","breakpoints","up","ClippedDrawer","_clsx","_clsx2","Drawer","paper","setDrawerClosed","ChevronRight_default","ChevronLeft_default","Divider","List_List","drawer_link_DrawerLink","Home_default","Extension_default","Done_default","Reorder_default","Timeline_default","Settings_default","snackIcon","fontSize","backgroundColor","green","palette","dark","info","main","warning","amber","Messages","listen","clear","Snackbar","ContentProps","reason","Close_default","content","contentShift","easeOut","Navigation","setOpen","CssBaseline","navbar","messages","children","paddingLeft","paddingRight","Page","Container","Paper","menu","height","Account","page","getQueriesByModule","createSelector","ret","q","plugin","getDecoratedModules","getVisibleModules","item","toLowerCase","search","description","getVisibleQueries","getLog","getVisibleMetrics","spacer","ModuleToolbar","TextField","label","setFilter","Refresh_default","EnableModuleSwitch","FormControlLabel","control","Switch","checked","inputProps","LoadModuleSwitch","disabled","expand","transform","shortest","expandOpen","avatar","red","maxHeight","Module","expanded","setExpanded","startsWith","substr","elevation","Avatar","aria-expanded","ExpandMore_default","disableSpacing","Collapse","in","timeout","unmountOnExit","paragraph","ModuleList","useEffect","show_module_Module","QueryToolbar","Query","QueryList","show_query_Query","LogToolbar","table","LogList","selected","setSelected","xs","Table","TableHead","TableRow","TableCell","TableBody","isItemSelected","isSelected","handleClick","date","level","secondary","file","line","MetricToolbar","MetricList","keys","Welcome","Main","navigation","exact","path","private_router_PrivateRoute","App","es","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export enum AlertConstants {\n    SUCCESS = 'ALERT_SUCCESS',\n    ERROR = 'ALERT_ERROR',\n    CLEAR = 'ALERT_CLEAR'\n};","export enum UserConstants {\n    REGISTER_REQUEST = 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS= 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE= 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST= 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS= 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE= 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT= 'USERS_LOGOUT',\n\n    GETALL_REQUEST= 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS= 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE= 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST= 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS= 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE= 'USERS_DELETE_FAILURE'   \n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest } : any) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)","export function defaultRequestSet(prefix:string) {\n    return {\n        REQUEST : `${prefix}_REQUEST`,\n        SUCCESS : `${prefix}_SUCCESS`,\n        FAILURE : `${prefix}_FAILURE`,\n    }\n}","import { defaultRequestSet } from \"./common.constants\";\n\nexport const ModuleConstants = {\n    LIST: defaultRequestSet('LIST'),\n    ENABLE: defaultRequestSet('ENABLE'),\n    DISABLE: defaultRequestSet('DISABLE'),\n    LOAD: defaultRequestSet('LOAD'),\n    UNLOAD: defaultRequestSet('UNLOAD'),\n\n    SET_FILTER: 'SET_FILTER',\n\n};","import { UserService } from \"./user.service\";\n\nexport enum ErrorType {\n    AUTH = '403_NOT_AUTHENTICATED',\n    MISSING = '404_MISSING',\n    GENERIC = '500_SERVER_ERROR',\n\n}\n\nexport interface ItemWithId {\n    id:string;\n}\n\nexport interface ServiceError {\n    type: ErrorType;\n    message:string;\n}\n\nfunction mkError(error:string, type: ErrorType = ErrorType.GENERIC) : ServiceError {\n    return {\n        message:error,\n        type: type,\n    }\n}\nexport function handleResponse(response:Response) {\n    return response.text().then(text => {\n        if (response.status === 403) {\n            return Promise.reject(mkError(text, ErrorType.AUTH));\n        }\n        try {\n            const data = text && JSON.parse(text);\n            if (!response.ok) {\n                if (response.status === 401) {\n                    UserService.logout();\n                    //location.reload(true);\n                }\n    \n                const error = (data && data.message) || response.statusText;\n                return Promise.reject(mkError(error));\n            }\n    \n            return data;\n        } catch (error) {\n            return Promise.reject(mkError(\"Failed to parse response from server\"));\n        }\n    });\n}\n\nexport function getHeader() {\n    const user: any = JSON.parse( localStorage.getItem('user') || '{}');\n    const token:String = user.key;\n\n    return { \n        'Content-Type': 'application/json' ,\n        'Authorization': `Bearer ${token}`\n    };\n}\n\nexport function getGetHeader() {\n    return {\n        method: 'GET',\n        headers: getHeader(),\n    };    \n}\n\nexport function getUrl(url:String) {\n    return `/api/v2${url}`;\n}\n\nexport class CachedValue<T> {\n    cache? : T;\n\n    constructor() {\n        this.cache = undefined;\n    }\n    isCached() {\n        return this.cache != undefined; \n    }\n    set(value: T) : T {\n        this.cache = value;\n        return value;\n\n    }\n    get() : T {\n        return this.cache!;\n    }\n\n\n}","import { defaultRequestSet } from \"./common.constants\";\nconst prefix = 'QUERY';\n\nexport const QueryConstants = {\n    LIST: defaultRequestSet(`${prefix}_LIST`),\n\n    SET_FILTER: `${prefix}SET_FILTER`,\n\n};","import { defaultRequestSet } from \"./common.constants\";\nconst prefix = 'LOG';\n\nexport const LogConstants = {\n    LIST: defaultRequestSet(`${prefix}_LIST`),\n};","import { defaultRequestSet } from \"./common.constants\";\nconst prefix = 'METRIC';\n\nexport const MetricConstants = {\n    LIST: defaultRequestSet(`${prefix}_LIST`),\n\n    SET_FILTER: `${prefix}SET_FILTER`,\n\n};","import { AlertConstants } from '../constants';\n\nexport interface AlertAction {\n    type: AlertConstants;\n    message?: String;\n}\n\nexport class AlertActions {\n\n    static success(message:String) : AlertAction {\n        return { type: AlertConstants.SUCCESS, message };\n    }\n    \n    static error(message:String) : AlertAction {\n        return { type: AlertConstants.ERROR, message };\n    }\n    \n    static clear() : AlertAction {\n        return { type: AlertConstants.CLEAR };\n    }\n}\n","import { handleResponse, CachedValue, getGetHeader, getUrl } from './common.service';\n\nexport interface User {\n    key?: String;\n    user?: String;\n}\n\nexport class UserService {\n    static login(username: String, password: String) {\n        const requestOptions = {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json' ,\n                'Authorization': 'Basic ' + btoa(username + \":\" + password)\n        },\n        };\n        return fetch(getUrl('/login'), requestOptions)\n            .then(handleResponse)\n            .then(user => {\n                localStorage.setItem('user', JSON.stringify(user));\n                return user;\n            });\n    }\n    \n    static logout() {\n        localStorage.removeItem('user');\n    }\n\n    static ping(): Promise<void> {\n        return fetch(getUrl('/'), getGetHeader())\n            .then(handleResponse)\n            .then(() => {\n            });\n    }\n}\n","import { handleResponse, CachedValue, getGetHeader, getUrl, ItemWithId } from './common.service';\nimport { Query } from './query.service';\n\nexport interface Module extends ItemWithId {\n    name: string;\n    title: string;\n    description: string;\n    enabled: boolean;\n    id: string;\n    load_url: string;\n    loaded: boolean;\n    metadata: {\n        [key: string]: string;\n    }\n    module_url: string;\n    unload_url: string;\n    // INternal state fields\n    queries : Query[];\n}\n\nexport class ModuleService {\n\n    static cachedList = new CachedValue<Module[]>();\n    static list(refresh:boolean): Promise<Module[]> {\n        if (!refresh && ModuleService.cachedList.isCached()) {\n            return Promise.resolve(ModuleService.cachedList.get());\n        } else {\n            return fetch(getUrl('/modules?all=true'), getGetHeader())\n                .then(handleResponse)\n                .then(modules => {\n                    return ModuleService.cachedList.set(modules);\n                });\n        }\n    }\n\n    static enable(module: Module): Promise<Module> {\n        return fetch(getUrl(`/modules/${module.name}/commands/enable`), getGetHeader())\n            .then(handleResponse)\n            .then(module => {\n                return module;\n            });\n    }\n    static disable(module: Module): Promise<Module> {\n        return fetch(getUrl(`/modules/${module.name}/commands/disable`), getGetHeader())\n            .then(handleResponse)\n            .then(module => {\n                return module;\n            });\n    }\n    static load(module: Module): Promise<Module> {\n        return fetch(getUrl(`/modules/${module.name}/commands/load`), getGetHeader())\n            .then(handleResponse)\n            .then(module => {\n                return module;\n            });\n    }\n    static unload(module: Module): Promise<Module> {\n        return fetch(getUrl(`/modules/${module.name}/commands/unload`), getGetHeader())\n            .then(handleResponse)\n            .then(module => {\n                return module;\n            });\n    }\n\n}\n","import { handleResponse, CachedValue, getGetHeader, getUrl, ItemWithId } from './common.service';\n\nexport interface Query extends ItemWithId {\n    name: string;\n    description: string;\n    title: string;\n    plugin: string;\n    metadata: {\n        [key: string]: string;\n    }\n}\n\nexport class QueryService {\n\n    static cachedList = new CachedValue<Query[]>();\n    static list(refresh:boolean): Promise<Query[]> {\n        if (!refresh && QueryService.cachedList.isCached()) {\n            return Promise.resolve(QueryService.cachedList.get());\n        } else {\n            return fetch(getUrl('/queries'), getGetHeader())\n                .then(handleResponse)\n                .then(Querys => {\n                    return QueryService.cachedList.set(Querys);\n                });\n        }\n    }\n}\n","import { handleResponse, CachedValue, getGetHeader, getUrl } from './common.service';\nexport enum LogLevels {\n    debug  = \"debug\"\n}\nexport interface LogEntry {\n\n    date: Date;\n    file: string;\n    level: LogLevels;\n    line: number;\n    message: string;\n}\n\nexport class LogService {\n\n    static cachedList = new CachedValue<LogEntry[]>();\n    static list(refresh: boolean): Promise<LogEntry[]> {\n        if (!refresh && LogService.cachedList.isCached()) {\n            return Promise.resolve(LogService.cachedList.get());\n        } else {\n            return fetch(getUrl('/logs'), getGetHeader())\n                .then(handleResponse)\n                .then(logs => {\n                    return LogService.cachedList.set(logs);\n                });\n        }\n    }\n}\n","import { handleResponse, CachedValue, getGetHeader, getUrl } from './common.service';\n\n\nexport type MetricsDictionary = { [key:string]:string|number; };\n\nexport class MetricService {\n\n    static cachedList = new CachedValue<MetricsDictionary>();\n    static list(refresh:boolean): Promise<MetricsDictionary> {\n        if (!refresh && MetricService.cachedList.isCached()) {\n            return Promise.resolve(MetricService.cachedList.get());\n        } else {\n            return fetch(getUrl('/metrics'), getGetHeader())\n                .then(handleResponse)\n                .then(Metrics => {\n                    return MetricService.cachedList.set(Metrics);\n                });\n        }\n    }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { UserConstants } from '../constants';\nimport { UserAction } from '../actions';\nimport { AuthenticationState } from '../state';\n\nconst userJson = localStorage.getItem('user');\nconst user = userJson ? JSON.parse(userJson) : undefined;\nconst initialState : AuthenticationState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action : UserAction) : AuthenticationState {\n  switch (action.type) {\n    case UserConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n    case UserConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n    case UserConstants.LOGIN_FAILURE:\n      return {};\n    case UserConstants.LOGOUT:\n      return {};\n    default:\n      return state\n  }\n}","import { ItemWithId } from '../services'\n\nexport const filterListById = <T extends ItemWithId>(modules: T[], module: T, action: { (m: T): T; }) => {\n    return modules!.map(m => {\n      if (m.id === module.id) {\n        return action(m);\n      }\n      return m;\n    })\n  }\n  ","import { ModuleConstants } from '../constants';\nimport { ModuleAction } from '../actions';\nimport { ModuleState } from '../state';\nimport { Module } from '../services';\nimport { filterListById } from './common.reducers';\n\nconst initialState: ModuleState = {\n  modules: [],\n}\n\nexport function module(state = initialState, action: ModuleAction): ModuleState {\n  switch (action.type) {\n    case ModuleConstants.LIST.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ModuleConstants.LIST.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        modules: action.modules || []\n      };\n    case ModuleConstants.LIST.FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        modules: []\n      };\n    case ModuleConstants.SET_FILTER:\n      return {\n        ...state,\n        visibilityFilter: action.filter,\n      };\n    case ModuleConstants.ENABLE.SUCCESS:\n      return {\n        ...state,\n        modules: filterListById<Module>(state.modules!, action.module!, m => ({\n          ...m,\n          enabled: true,\n        }))\n      }\n    case ModuleConstants.DISABLE.SUCCESS:\n      return {\n        ...state,\n        modules: filterListById<Module>(state.modules!, action.module!, m => ({\n          ...m,\n          enabled: false,\n        }))\n      }\n    case ModuleConstants.LOAD.SUCCESS:\n      return {\n        ...state,\n        modules: filterListById<Module>(state.modules!, action.module!, m => ({\n          ...m,\n          loaded: true,\n        }))\n      }\n    case ModuleConstants.UNLOAD.SUCCESS:\n      return {\n        ...state,\n        modules: filterListById<Module>(state.modules!, action.module!, m => ({\n          ...m,\n          loaded: false,\n        }))\n      }\n    default:\n      return state\n  }\n}","import { QueryConstants } from '../constants';\nimport { QueryAction } from '../actions';\nimport { QueryState } from '../state';\nimport { Query } from '../services';\nimport { AppState } from '.';\n\nconst initialState: QueryState = {\n  queries: [],\n}\n\nconst filterQuerys = (queries: Query[], query: Query, action: { (m: Query): Query; }) => {\n  return queries!.map(m => {\n    if (m.id === query.id) {\n      return action(m);\n    }\n    return m;\n  })\n}\n\nexport function query(state = initialState, action: QueryAction): QueryState {\n  switch (action.type) {\n    case QueryConstants.LIST.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case QueryConstants.LIST.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        queries: action.queries || []\n      };\n    case QueryConstants.LIST.FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        queries: []\n      };\n    case QueryConstants.SET_FILTER:\n      return {\n        ...state,\n        visibilityFilter: action.filter,\n      };\n    default:\n      return state\n  }\n}","import { LogConstants } from '../constants';\nimport { LogAction } from '../actions';\nimport { LogState } from '../state';\nimport { LogEntry } from '../services';\n\nconst initialState: LogState = {\n  log: [],\n}\n\nexport function log(state = initialState, action: LogAction): LogState {\n  switch (action.type) {\n    case LogConstants.LIST.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LogConstants.LIST.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        log: action.log || []\n      };\n    case LogConstants.LIST.FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        log: []\n      };\n    default:\n      return state\n  }\n}","import { MetricConstants } from '../constants';\nimport { MetricAction } from '../actions';\nimport { MetricState } from '../state';\n\nconst initialState: MetricState = {\n  metrics: {},\n}\n\nexport function metric(state = initialState, action: MetricAction): MetricState {\n  switch (action.type) {\n    case MetricConstants.LIST.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case MetricConstants.LIST.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        metrics: action.metrics || {}\n      };\n    case MetricConstants.LIST.FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        metrics: {}\n      };\n    case MetricConstants.SET_FILTER:\n      return {\n        ...state,\n        visibilityFilter: action.filter,\n      };\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { users } from './users.reducer';\nimport { alert } from './alert.reducer';\nimport { module } from './module.reducer';\nimport { query } from './query.reducer';\nimport { log } from './log.reducer';\nimport { metric } from './metric.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  registration,\n  users,\n  alert,\n  module,\n  query,\n  log,\n  metric\n});\n\nexport default rootReducer;\nexport type AppState = ReturnType<typeof rootReducer>;","import { UserConstants } from '../constants';\nimport { UserAction } from '../actions';\nimport { RegistrationState } from '../state';\n\nexport function registration(state : RegistrationState = {}, action: UserAction) : RegistrationState {\n  switch (action.type) {\n    case UserConstants.REGISTER_REQUEST:\n      return { registering: true };\n    case UserConstants.REGISTER_SUCCESS:\n      return {};\n    case UserConstants.REGISTER_FAILURE:\n      return {};\n    default:\n      return state\n  }\n}","import { UserAction } from '../actions';\nimport { UserState } from '../state';\n\nexport function users(state : UserState = {}, action : UserAction) : UserState {\n  switch (action.type) {\n    default:\n      return state\n  }\n}","import { AlertConstants } from '../constants';\nimport { AlertAction } from '../actions';\nimport { AlertState } from '../state';\n\nexport function alert(state : AlertState = {}, action : AlertAction) : AlertState {\n  switch (action.type) {\n    case AlertConstants.SUCCESS:\n      return {\n        type: 'success',\n        message: action.message\n      };\n    case AlertConstants.ERROR:\n      return {\n        type: 'error',\n        message: action.message\n      };\n    case AlertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n//import { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\n//const loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        //loggerMiddleware\n    )\n);","import { AlertAction, AlertActions } from \"./alert.actions\";\nimport { ServiceError, ErrorType } from \"../services/common.service\";\nimport { UserActions, UserAction } from \"./user.actions\";\n\n// { (arg0: (dispatch: (action: UserAction) => void) => void): void; (action: ActionType): void; (action: AlertAction): void; (action: UserAction): void; }\nexport function defaultNSCPHandler<ActionType>(exec: any, request: any, success: any, failure: any) {\n    return (dispatch: { (arg0: (dispatch: (action: UserAction) => void) => void): void; (action: ActionType): void; (action: AlertAction): void; (action: UserAction): void; } ) => {\n        dispatch(request());\n\n        exec()\n            .then(\n                (result: any) => {\n                    console.log(result);\n                    dispatch(success(result));\n                },\n                (error: ServiceError) => {\n                    if (error.type == ErrorType.AUTH) {\n                        dispatch(UserActions.validateCredentials(error.message));\n                    } else {\n                        dispatch(failure(error.message));\n                        dispatch(AlertActions.error(error.message));\n                    }\n                }\n            );\n    };\n}\n","import { UserConstants } from '../constants';\nimport { UserService, User } from '../services';\nimport { history } from '../helpers';\nimport { ServiceError } from '../services/common.service';\nimport { defaultNSCPHandler } from './common.actions';\n\nexport interface UserAction {\n    type: UserConstants;\n    user?: User;\n    error?: String;\n}\nexport class UserActions {\n\n    static login(username: String, password: String) {\n        return defaultNSCPHandler<UserAction>(() => UserService.login(username, password),\n            () : UserAction => { return { type: UserConstants.LOGIN_REQUEST, user: { user: username } } },\n            (user: User) : UserAction => { \n                history.push('/');\n                return { type: UserConstants.LOGIN_SUCCESS, user }\n             },\n            (error: string) : UserAction => { return { type: UserConstants.LOGIN_FAILURE, error } }\n        );\n    }\n    \n    \n    static validateCredentials(originalError:string) {\n        return (dispatch: { (action: UserAction): void }) => {\n            dispatch(request());\n    \n            UserService.ping()\n                .then(\n                    () => { \n                        dispatch(success());\n                    },\n                    (error :ServiceError) => {\n                        UserService.logout();\n                        history.push('/');\n                        dispatch(failure(originalError));\n                    }\n                );\n        };\n    \n        function request() : UserAction { return { type: UserConstants.LOGIN_REQUEST } }\n        function success() : UserAction  { return { type: UserConstants.LOGIN_SUCCESS } }\n        function failure(error: String) : UserAction  { return { type: UserConstants.LOGIN_FAILURE, error } }\n    }\n    \n    static logout() {\n        UserService.logout();\n        return { type: UserConstants.LOGOUT };\n    }\n}\n","import { ModuleConstants } from '../constants';\nimport { Module, ModuleService } from '../services';\nimport { defaultNSCPHandler } from './common.actions';\n\nexport interface ModuleAction {\n    type: string;\n    modules?: Module[];\n    module?: Module;\n    error?: String;\n    filter?: string;\n}\nexport class ModuleActions {\n\n    static setFilter(text:string) {\n        return { type: ModuleConstants.SET_FILTER, filter: text }\n    }\n\n    static list(refresh: boolean = false) {\n        return defaultNSCPHandler<ModuleAction>(() => ModuleService.list(refresh),\n            () => { return { type: ModuleConstants.LIST.REQUEST } },\n            (modules: Module[]) : ModuleAction => { return { type: ModuleConstants.LIST.SUCCESS, modules } },\n            (error: string) : ModuleAction => { return { type: ModuleConstants.LIST.FAILURE, error } }\n        );\n    }\n\n    static unload(module: Module) {\n        return defaultNSCPHandler<ModuleAction>(() => ModuleService.unload(module),\n            () => { return { type: ModuleConstants.UNLOAD.REQUEST } },\n            (result: string) : ModuleAction => { return { type: ModuleConstants.UNLOAD.SUCCESS, module } },\n            (error: string) : ModuleAction => { return { type: ModuleConstants.UNLOAD.FAILURE, error } }\n        );\n    }\n\n    static load(module: Module) {\n        return defaultNSCPHandler<ModuleAction>(() => ModuleService.load(module),\n            () => { return { type: ModuleConstants.LOAD.REQUEST } },\n            (result: string) : ModuleAction => { return { type: ModuleConstants.LOAD.SUCCESS, module } },\n            (error: string) : ModuleAction => { return { type: ModuleConstants.LOAD.FAILURE, error } }\n        );\n    }\n\n    static disable(module: Module) {\n        return defaultNSCPHandler<ModuleAction>(() => ModuleService.disable(module),\n            () => { return { type: ModuleConstants.DISABLE.REQUEST } },\n            (result: string) : ModuleAction => { return { type: ModuleConstants.DISABLE.SUCCESS, module } },\n            (error: string) : ModuleAction => { return { type: ModuleConstants.DISABLE.FAILURE, error } }\n        );\n    }\n\n    static enable(module: Module) {\n        return defaultNSCPHandler<ModuleAction>(() => ModuleService.enable(module),\n            () => { return { type: ModuleConstants.ENABLE.REQUEST } },\n            (result: string) : ModuleAction => { return { type: ModuleConstants.ENABLE.SUCCESS, module } },\n            (error: string) : ModuleAction => { return { type: ModuleConstants.ENABLE.FAILURE, error } }\n        );\n    }\n\n}\n","import { QueryConstants } from '../constants';\nimport { Query, QueryService } from '../services';\nimport { defaultNSCPHandler } from './common.actions';\n\nexport interface QueryAction {\n    type: string;\n    queries?: Query[];\n    query?: Query;\n    error?: String;\n    filter?: string;\n}\nexport class QueryActions {\n\n    static setFilter(text:string) {\n        return { type: QueryConstants.SET_FILTER, filter: text }\n    }\n\n    static list(refresh: boolean = false) {\n        return defaultNSCPHandler<QueryAction>(() => QueryService.list(refresh),\n            () => { return { type: QueryConstants.LIST.REQUEST } },\n            (queries: Query[]) : QueryAction => { return { type: QueryConstants.LIST.SUCCESS, queries } },\n            (error: string) : QueryAction => { return { type: QueryConstants.LIST.FAILURE, error } }\n        );\n    }\n\n}\n","import { LogConstants } from '../constants';\nimport { LogEntry, LogService } from '../services';\nimport { defaultNSCPHandler } from './common.actions';\n\nexport interface LogAction {\n    type: string;\n    log?: LogEntry[];\n    error?: string;\n    filter?: string;\n}\nexport class LogActions {\n\n    static list(refresh: boolean = false) {\n        return defaultNSCPHandler<LogAction>(() => LogService.list(refresh),\n            () => { return { type: LogConstants.LIST.REQUEST } },\n            (log: LogEntry[]) : LogAction => { return { type: LogConstants.LIST.SUCCESS, log } },\n            (error: string) : LogAction => { return { type: LogConstants.LIST.FAILURE, error } }\n        );\n    }\n\n}\n","import { MetricConstants } from '../constants';\nimport { MetricService, MetricsDictionary } from '../services';\nimport { defaultNSCPHandler } from './common.actions';\n\nexport interface MetricAction {\n    type: string;\n    metrics?: MetricsDictionary;\n    error?: String;\n    filter?: string;\n}\nexport class MetricActions {\n\n    static setFilter(text:string) {\n        return { type: MetricConstants.SET_FILTER, filter: text }\n    }\n\n    static list(refresh: boolean = false) {\n        return defaultNSCPHandler<MetricAction>(() => MetricService.list(refresh),\n            () => { return { type: MetricConstants.LIST.REQUEST } },\n            (metrics: MetricsDictionary) : MetricAction => { return { type: MetricConstants.LIST.SUCCESS, metrics } },\n            (error: string) : MetricAction => { return { type: MetricConstants.LIST.FAILURE, error } }\n        );\n    }\n\n}\n","import React from \"react\";\nimport { Button, Card, CardContent, InputAdornment, IconButton, FormControl, InputLabel, Input, CardHeader, CardActions, Grid } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { UserActions } from \"../actions\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\ninterface State {\n  username: String,\n  password: String,\n  showPassword: boolean;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: \"center\",\n      margin: 20,\n      padding: 20,\n      maxWidth: 375,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\nconst Component = function (props: any) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    username: '',\n    password: '',\n    showPassword: false,\n  });\n  const { dispatch }: any = props;\n\n  const handleChange = (name: any) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n  const login = () => {\n    dispatch(UserActions.login(values.username, values.password));\n  }\n\n  return (\n    <Card className={classes.card}>\n      <form noValidate autoComplete=\"off\">\n        <CardHeader\n          title=\"Login\"\n          subheader=\"Please login\"\n        />\n        <CardContent>\n          <FormControl>\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\n            <Input\n              id=\"username\"\n              value={values.username}\n              required\n              onChange={handleChange('username')}\n              startAdornment={(\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              )}\n            />\n          </FormControl>\n          <br />\n          <FormControl>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              id=\"password\"\n              type={values.showPassword ? 'text' : 'password'}\n              value={values.password}\n              required\n              onChange={handleChange('password')}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </CardContent>\n        <CardActions>\n          <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n            <Button onClick={login} size=\"small\" color=\"primary\">\n              Login\n        </Button>\n          </Grid>\n        </CardActions>\n      </form>\n    </Card>\n  );\n}\n\nexport const Login = connect()(Component);","import React from 'react';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Link } from \"react-router-dom\";\nimport { AppState } from '../../reducers';\nimport { connect } from 'react-redux';\nimport { UserActions } from '../../actions';\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nconst Component = function(props:any) {\n  const { dispatch }: any = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  function handleMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  function handleLogout() {\n    dispatch(UserActions.logout());\n    handleClose();\n  }\n\n  return (\n      <div>\n        <IconButton\n        aria-label=\"Account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n    >\n        <AccountCircle />\n    </IconButton>\n    <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n        }}\n        open={open}\n        onClose={handleClose}\n    >\n        <Link to=\"/account\" style={{ textDecoration: 'none' }}><MenuItem onClick={handleClose}>Profile</MenuItem></Link>\n        <Link to=\"/\" style={{ textDecoration: 'none' }}><MenuItem onClick={handleLogout}>Logout</MenuItem></Link>\n    </Menu>\n  </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    authentication: state.authentication,\n  }\n}\n\nexport const AccountButton = connect(mapStateToProps)(Component);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AccountButton } from './account-button';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    toolbar: {\n      display: 'flex',\n      flexGrow: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nfunction NavBar(props : any) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n        \n    function handleDrawerOpen() {\n        if (props && props.setDrawerOpen) {\n          props.setDrawerOpen();\n        }\n    }\n\n    return (\n        <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: props.drawerOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: props.drawerOpen,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} noWrap>\n            NSClient++\n          </Typography>\n          <AccountButton/>\n        </Toolbar>\n      </AppBar>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { LocationDescriptor } from 'history';\n\nexport interface DrawerLinkProps {\n  key: string;\n  icon: any;\n  title: string;\n  to: LocationDescriptor;\n\n}\nexport const DrawerLink = function (props: DrawerLinkProps) {\n  return (\n    <Link to={props.to} style={{ textDecoration: 'none' }}>\n      <ListItem button key={props.key}>\n        <ListItemIcon>{props.icon}</ListItemIcon>\n        <ListItemText primary={props.title} />\n      </ListItem>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DrawerLink } from './drawer-link';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n  }),\n);\n\nfunction ClippedDrawer(props: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  function handleDrawerClose() {\n    if (props && props.setDrawerClosed) {\n      props.setDrawerClosed();\n    }\n  }\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: props.drawerOpen,\n        [classes.drawerClose]: !props.drawerOpen,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: props.drawerOpen,\n          [classes.drawerClose]: !props.drawerOpen,\n        }),\n      }}\n      open={props.drawerOpen}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <DrawerLink to=\"/\" key=\"home\" title=\"Home\" icon={<HomeIcon/>} />\n        <DrawerLink to=\"/modules\" key=\"modules\" title=\"Modules\" icon={<ExtensionIcon/>} />\n        <DrawerLink to=\"/queries\" key=\"queries\" title=\"Queries\" icon={<DoneIcon/>} />\n        <DrawerLink to=\"/log\" key=\"log\" title=\"Log\" icon={<ReorderIcon/>} />\n        <DrawerLink to=\"/metrics\" key=\"metrics\" title=\"Metrics\" icon={<TimelineIcon/>} />\n        <ListItem button key=\"settings\">\n          <ListItemIcon><SettingsIcon /></ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n}\nexport default ClippedDrawer;\n","import React, { SyntheticEvent } from 'react';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport { AlertActions } from '../actions';\nimport { history } from '../helpers';\nimport { connect } from 'react-redux'\nimport { AppState } from '../reducers';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green, amber } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    snackIcon: {\n      fontSize: 20,\n    },\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n  }),\n);\n\nlet Messages: any = function (props: any) {\n  const { dispatch }: any = props;\n  history.listen((location, action) => {\n    dispatch(AlertActions.clear());\n  });\n  function onSnackClose(event?: SyntheticEvent, reason?: string) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(AlertActions.clear());\n  }\n\n  const classes = useStyles();\n  const { alert }: AppState = props;\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      ContentProps={{\n        classes: {\n          root: classes[alert.type || \"error\"]\n        }\n      }}\n      open={alert.message != undefined}\n      message={<span>{alert.message}</span>}\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onSnackClose}>\n          <CloseIcon className={classes.snackIcon} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    alert: state.alert\n  }\n}\n\nMessages = connect(mapStateToProps)(Messages)\n\nexport default Messages;\n","import React from 'react';\nimport NavBar from './navbar';\nimport ClippedDrawer from './drawer';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { Router } from \"react-router-dom\";\nimport Messages from '../messages';\nimport { history } from '../../helpers';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n  }),\n);\n\nlet Navigation: any = function (props: any) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Router history={history}>\n        <NavBar drawerOpen={open} setDrawerOpen={() => setOpen(true)}></NavBar>\n        <ClippedDrawer drawerOpen={open} setDrawerClosed={() => setOpen(false)}></ClippedDrawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.toolbar} />\n          <Messages />\n          {props.children}\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Container, Typography, Paper, makeStyles, createStyles, Theme } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3)\n        },\n    }),\n);\nconst Page = function (props: any) {\n    const classes = useStyles();\n    return (\n        <div>\n            <Container maxWidth=\"lg\">\n                <Paper>\n                    {props.menu}\n                    <div className={classes.container}>\n                        {props.loading ?\n                            (<Typography>Loading...</Typography>) :\n                            (<div>{props.content}</div>)\n                        }\n                    </div>\n                </Paper>\n            </Container>\n        </div>\n    );\n}\nexport default Page;","import React from \"react\";\nimport { Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../reducers\";\nimport Page from \"../common/page\";\nimport { User } from \"../../services\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            height: 140,\n            width: 100,\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n    }),\n);\ninterface PropsType {\n    user: User;\n}\nconst Component : any = function (props: PropsType) {\n    const { dispatch }: any = props;\n    const classes = useStyles();\n    return (\n        <Page menu={\n            <Toolbar>\n            </Toolbar>\n        }\n            content={\n                <Typography>Your logged in as: {props.user.user}</Typography>\n            }\n        />\n\n    );\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        user: state.authentication.user\n    };\n}\n\nexport const Account = connect(mapStateToProps)(Component);","import { createSelector } from 'reselect'\nimport { ModuleState, QueryState } from '../state';\nimport { Module, Query } from '../services';\nimport { AppState } from '../reducers';\n\nconst getVisibilityFilter = (state: ModuleState) => state.visibilityFilter\nconst getModules = (state: ModuleState): Module[] => state.modules || []\nconst getQueries = (state: QueryState): Query[] => state.queries || []\n\ntype QueriesByModule = { [key:string]:Query[]; };\n\nexport const getQueriesByModule = createSelector(\n    [getQueries],\n    (queries: Query[]) => {\n        const ret : QueriesByModule = {};\n        queries.map(q => {\n            if (q.plugin in ret) {\n                ret[q.plugin].push(q);\n            } else {\n                ret[q.plugin] = [q];\n            }\n        })\n        return ret;\n    }\n);\n\nexport const getDecoratedModules = createSelector(\n    [getModules, getQueriesByModule],\n    (modules: Module[], queries: QueriesByModule) => {\n        return modules.map(m => ({ ...m,\n            queries: queries[m.id],\n        }));\n    }\n);\n\nexport const getVisibleModules = createSelector(\n    [getVisibilityFilter, getDecoratedModules],\n    (visibilityFilter, modules) => {\n        if (!visibilityFilter) {\n            return modules;\n        }\n        return modules.filter(function (item: Module) {\n            return item.title.toLowerCase().search(\n                visibilityFilter.toLowerCase()) !== -1\n                || item.name.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1\n                || item.description.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1;\n        });\n    }\n)","import { createSelector } from 'reselect'\nimport { QueryState } from '../state';\nimport { Query } from '../services';\n\nconst getVisibilityFilter = (state: QueryState) => state.visibilityFilter\nconst getQueries = (state: QueryState): Query[] => state.queries || []\n\nexport const getVisibleQueries = createSelector(\n    [getVisibilityFilter, getQueries],\n    (visibilityFilter, queries) => {\n        if (!visibilityFilter) {\n            return queries;\n        }\n        return queries.filter(function (item: Query) {\n            return item.title.toLowerCase().search(\n                visibilityFilter.toLowerCase()) !== -1\n                || item.name.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1\n                || item.description.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1;\n        });\n    }\n)","import { LogState } from '../state';\nimport { LogEntry } from '../services';\n\nexport const getLog = (state: LogState): LogEntry[] => state.log || []\n","import { createSelector } from 'reselect'\nimport { MetricState } from '../state';\nimport { MetricsDictionary } from '../services';\n\nconst getVisibilityFilter = (state: MetricState) => state.visibilityFilter\nconst getMetrics = (state: MetricState): MetricsDictionary => state.metrics || {}\n\nexport const getVisibleMetrics = createSelector(\n    [getVisibilityFilter, getMetrics],\n    (visibilityFilter, metrics) => {\n        if (!visibilityFilter) {\n            return metrics;\n        }\n        return metrics;\n        /*.filter(function (item: Metric) {\n            return item.title.toLowerCase().search(\n                visibilityFilter.toLowerCase()) !== -1\n                || item.name.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1\n                || item.description.toLowerCase().search(\n                    visibilityFilter.toLowerCase()) !== -1;\n        });\n        */\n    }\n)","import React from \"react\";\nimport { Toolbar, TextField, IconButton } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { ModuleActions } from \"../../actions\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        spacer: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst Component = function (props: any) {\n    const { dispatch }: any = props;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(ModuleActions.setFilter(event.target.value));\n    };\n    const handleRefresh = () => {\n        dispatch(ModuleActions.list(true));\n    };\n    const classes = useStyles();\n    return (\n        <Toolbar>\n            <TextField\n                id=\"filter-list\"\n                label=\"Filter\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={handleChange}\n            />\n            <span className={classes.spacer} />\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"refresh\"\n                onClick={handleRefresh}\n            >\n                <RefreshIcon />\n            </IconButton>\n        </Toolbar>\n    );\n}\nexport const ModuleToolbar = connect()(Component);","import React from 'react';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { ModuleActions } from '../../actions';\nimport { ModuleProps } from './show.module';\nimport { connect } from 'react-redux';\n\nexport const Component = function (props: ModuleProps) {\n  const { dispatch }: any = props;\n  function handleToggle() {\n    if (props.module.enabled) {\n      dispatch(ModuleActions.disable(props.module));\n    } else {\n      dispatch(ModuleActions.enable(props.module));\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.module.enabled}\n          onChange={handleToggle}\n          inputProps={{ 'aria-label': 'enabled' }}\n        />\n      }\n      label=\"Enabled\"\n    />\n  );\n}\n\nexport const EnableModuleSwitch = connect()(Component);\n\n","import React from 'react';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { ModuleActions } from '../../actions';\nimport { ModuleProps } from './show.module';\nimport { connect } from 'react-redux';\n\nconst Component = function (props: ModuleProps) {\n  const { dispatch }: any = props;\n  function handleToggle() {\n    if (props.module.loaded) {\n      dispatch(ModuleActions.unload(props.module));\n    } else {\n      dispatch(ModuleActions.load(props.module));\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.module.loaded}\n          onChange={handleToggle}\n          inputProps={{ 'aria-label': 'loaded' }}\n        />\n      }\n      label=\"Loaded\"\n    />\n  );\n}\n\nexport const LoadModuleSwitch = connect()(Component);\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Module as ModuleType } from '../../services';\nimport { EnableModuleSwitch } from './enable.module.switch';\nimport { LoadModuleSwitch } from './load.module.switch';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345,\n      width: 345,\n    },\n    enabled: {\n      backgroundColor: \"none\",\n    },\n    disabled: {\n      backgroundColor: \"#90A4AE\",\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    description: {\n      maxHeight: 50,\n      height: 50,\n    }\n  }),\n);\n\nexport interface ModuleProps {\n  module: ModuleType;\n}\nexport const Module = function (props: ModuleProps) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const module = props.module;\n\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n  const avatar = module.id.startsWith('Check') ? module.id.substr(5, 1) : module.id.substr(0, 1);\n\n  return (\n    <Card className={clsx(classes.card, module.enabled ? classes.enabled : classes.disabled)} elevation={module.enabled ? 3 : 1}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Module\" className={classes.avatar}>\n            {avatar}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"Show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        }\n        title={module.id}\n        subheader={module.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" noWrap={!expanded}>\n          {module.description}\n        </Typography>\n\n      </CardContent>\n      <CardActions disableSpacing>\n        <EnableModuleSwitch module={module} />\n        <LoadModuleSwitch module={module} />\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {module.queries ?\n            (\n              module.queries.map((query) => (\n                <Typography>{query.name}</Typography>\n              ))\n            ): (\n              <Typography>no queries</Typography>\n            )\n          }\n          <Typography paragraph>TODO: Add queries here</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\n\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../reducers\";\nimport { ModuleActions, QueryActions } from \"../../actions\";\nimport { getVisibleModules } from '../../selectors'\nimport Page from \"../common/page\";\nimport { ModuleToolbar } from \"./toolbar.module\";\nimport { Module } from \"./show.module\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst List = function (props: any) {\n    const { dispatch }: any = props;\n\n    useEffect(() => {\n        dispatch(ModuleActions.list());\n        dispatch(QueryActions.list());\n    }, []);\n\n    const classes = useStyles();\n    return (\n        <Page\n            loading={props.loading}\n            menu={<ModuleToolbar />}\n            content={\n                <Grid\n                    container\n                    spacing={2}\n                    className={classes.root}\n                >\n                    {props.modules.map((module: any) => (\n                        <Grid key={module.id} item>\n                            <Module module={module} />\n                        </Grid>\n                    ))}\n                </Grid>\n            } />\n    );\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        modules: getVisibleModules(state.module),\n        loading: state.module.loading || false\n    }\n}\n\nexport const ModuleList = connect(mapStateToProps)(List);\n","import React from \"react\";\nimport { Toolbar, TextField, IconButton } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { QueryActions } from \"../../actions\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        spacer: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst Component = function (props: any) {\n    const { dispatch }: any = props;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(QueryActions.setFilter(event.target.value));\n    };\n    const handleRefresh = () => {\n        dispatch(QueryActions.list(true));\n    };\n    const classes = useStyles();\n    return (\n        <Toolbar>\n            <TextField\n                id=\"filter-list\"\n                label=\"Filter\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={handleChange}\n            />\n            <span className={classes.spacer} />\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"refresh\"\n                onClick={handleRefresh}\n            >\n                <RefreshIcon />\n            </IconButton>\n        </Toolbar>\n    );\n}\nexport const QueryToolbar = connect()(Component);","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Query as QueryType } from '../../services';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345,\n      width: 345,\n    },\n    enabled: {\n      backgroundColor: \"none\",\n    },\n    disabled: {\n      backgroundColor: \"#90A4AE\",\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    description: {\n      maxHeight: 50,\n      height: 50,\n    }\n  }),\n);\n\nexport interface QueryProps {\n  query: QueryType;\n}\nexport const Query = function (props: QueryProps) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const query : QueryType = props.query;\n\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n  const avatar = query.name.startsWith('check_') ? query.name.substr(6, 1) : query.name.startsWith('check') ? query.name.substr(5, 1) :query.name.substr(0,1);\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Query\" className={classes.avatar}>\n            {avatar}\n          </Avatar>\n        }\n        action={\n          <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"Show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n        }\n        title={query.name}\n        subheader={query.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" noWrap={!expanded}>\n          {query.description}\n        </Typography>\n\n      </CardContent>\n      <CardActions disableSpacing>\n        TODO: Execute here\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>TODO: Show help here</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\n\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../reducers\";\nimport { QueryActions } from \"../../actions\";\nimport { getVisibleQueries } from '../../selectors'\nimport Page from \"../common/page\";\nimport { QueryToolbar } from \"./toolbar.query\";\nimport { Query } from \"./show.query\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst List = function (props: any) {\n    const { dispatch }: any = props;\n\n    useEffect(() => {\n        dispatch(QueryActions.list());\n    }, []);\n\n    const classes = useStyles();\n    return (\n        <Page\n            loading={props.loading}\n            menu={<QueryToolbar />}\n            content={\n                <Grid\n                    container\n                    spacing={2}\n                    className={classes.root}\n                >\n                    {props.queries.map((query: any) => (\n                        <Grid key={query.name} item>\n                            <Query query={query} />\n                        </Grid>\n                    ))}\n                </Grid>\n            } />\n    );\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        queries: getVisibleQueries(state.query),\n        loading: state.query.loading || false\n    }\n}\n\nexport const QueryList = connect(mapStateToProps)(List);\n","import React from \"react\";\nimport { Toolbar, TextField, IconButton } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { LogActions } from \"../../actions\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        spacer: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst Component = function (props: any) {\n    const { dispatch }: any = props;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        //dispatch(LogActions.setFilter(event.target.value));\n    };\n    const handleRefresh = () => {\n        dispatch(LogActions.list(true));\n    };\n    const classes = useStyles();\n    return (\n        <Toolbar>\n            <span className={classes.spacer} />\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"refresh\"\n                onClick={handleRefresh}\n            >\n                <RefreshIcon />\n            </IconButton>\n        </Toolbar>\n    );\n}\nexport const LogToolbar = connect()(Component);","import React, { useEffect } from \"react\";\nimport { Table, TableBody, TableRow, TableHead, TableCell, Container, Grid, ListItem, ListItemText, List } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../reducers\";\nimport { LogActions } from \"../../actions\";\nimport { getLog } from '../../selectors'\nimport Page from \"../common/page\";\nimport { LogToolbar } from \"./toolbar.log\";\nimport { LogEntry } from \"../../services\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        table: {\n            paddingLeft: theme.spacing(2)\n        }\n    }),\n);\n\nconst Component = function (props: any) {\n    const { dispatch }: any = props;\n    const [selected, setSelected] = React.useState<LogEntry | undefined>(undefined);\n\n    useEffect(() => {\n        dispatch(LogActions.list());\n    }, []);\n\n\n    function handleClick(event: React.MouseEvent<unknown>, log: LogEntry) {\n        if (selected === log) {\n            setSelected(undefined);\n        } else {\n            setSelected(log);\n        }\n    }\n\n    const isSelected = (log: LogEntry) => selected === log;\n\n    const classes = useStyles();\n    return (\n        <Page\n            loading={props.loading}\n            menu={<LogToolbar />}\n            content={\n                <Grid container direction=\"row\">\n                    <Grid item xs={selected === undefined ? 12 : 10}>\n                        <Table className={classes.table} padding=\"none\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Date</TableCell>\n                                    <TableCell>Level</TableCell>\n                                    <TableCell>Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {props.log.map((log: LogEntry) => {\n                                    const isItemSelected = isSelected(log);\n                                    return (\n                                        <TableRow\n                                            onClick={event => handleClick(event, log)}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell>{log.date}</TableCell>\n                                            <TableCell>{log.level}</TableCell>\n                                            <TableCell>{log.message}</TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n                    </Grid>\n                    {selected !== undefined ? (\n                        <Grid item xs={2}>\n                            <List>\n                                <ListItem>\n                                    <ListItemText primary={selected.level} secondary=\"Level\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemText primary={selected.date} secondary=\"Date\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemText primary={selected.file + \":\" + selected.line} secondary=\"Reference\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemText primary={selected.message} />\n                                </ListItem>\n                            </List>\n                        </Grid>) : null}\n                </Grid>\n\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        log: getLog(state.log),\n        loading: state.log.loading || false\n    }\n}\n\nexport const LogList = connect(mapStateToProps)(Component);\n","import React from \"react\";\nimport { Toolbar, TextField, IconButton } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { MetricActions } from \"../../actions\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        spacer: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nconst Component = function (props: any) {\n    const { dispatch }: any = props;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(MetricActions.setFilter(event.target.value));\n    };\n    const handleRefresh = () => {\n        dispatch(MetricActions.list(true));\n    };\n    const classes = useStyles();\n    return (\n        <Toolbar>\n            <TextField\n                id=\"filter-list\"\n                label=\"Filter\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={handleChange}\n            />\n            <span className={classes.spacer} />\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"refresh\"\n                onClick={handleRefresh}\n            >\n                <RefreshIcon />\n            </IconButton>\n        </Toolbar>\n    );\n}\nexport const MetricToolbar = connect()(Component);","import React, { useEffect } from \"react\";\nimport { Grid, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../reducers\";\nimport { MetricActions } from \"../../actions\";\nimport { getVisibleMetrics } from '../../selectors'\nimport Page from \"../common/page\";\nimport { MetricToolbar } from \"./toolbar.metric\";\nimport { MetricsDictionary } from \"../../services\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        table: {\n            paddingLeft: theme.spacing(2)\n        }\n    }),\n);\n\ninterface Properties {\n    metrics: MetricsDictionary;\n    loading: boolean;\n}\n\n\nconst List = function (props: Properties) {\n    const { dispatch }: any = props;\n    console.log(props);\n\n    useEffect(() => {\n        dispatch(MetricActions.list());\n    }, []);\n\n    const classes = useStyles();\n    return (\n        <Page\n            loading={props.loading}\n            menu={<MetricToolbar />}\n            content={\n                <Table className={classes.table} padding=\"none\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Key</TableCell>\n                            <TableCell>Value</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(props.metrics).map(key => (\n                            <TableRow>\n                                <TableCell>{key}</TableCell>\n                                <TableCell>{props.metrics[key]}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            } />\n    );\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        metrics: getVisibleMetrics(state.metric),\n        loading: state.metric.loading || false\n    }\n}\n\nexport const MetricList = connect(mapStateToProps)(List);\n","import React from \"react\";\n\nfunction Welcome() {\n  return (\n    <div>This is a very early beta version of the new web interface, expect more soon...</div>\n  );\n}\n\nexport default Welcome;","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { PrivateRoute } from './private-router';\nimport { Login } from './login';\nimport Navigation from './navigation';\nimport { Account } from './account';\nimport { ModuleList } from './module';\nimport { QueryList } from './query';\nimport { LogList } from './log';\nimport { MetricList } from './metric';\nimport Welcome from './welcome';\n\nlet Main: any = function (props: any) {\n  return (\n    <Navigation>\n      <Route exact path=\"/login\" component={Login} />\n      <PrivateRoute exact path=\"/\" component={Welcome} />\n      <PrivateRoute exact path=\"/account\" component={Account} />\n      <PrivateRoute exact path=\"/modules\" component={ModuleList} />\n      <PrivateRoute exact path=\"/queries\" component={QueryList} />\n      <PrivateRoute exact path=\"/metrics\" component={MetricList} />\n      <PrivateRoute exact path=\"/log\" component={LogList} />\n    </Navigation>\n  );\n}\nexport default Main;\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport Main from './components/main';\nimport { store } from './helpers';\n\nfunction App() {\n  return (<Provider store={store}>\n    <Main />\n  </Provider>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}