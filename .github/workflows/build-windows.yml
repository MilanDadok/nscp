name: CMake

on:
  push: {}

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - id: python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: make dirs
      run: |
        mkdir tmp
        cd tmp
        mkdir nscp
        mkdir protobuf
      shell: cmd
  

    - name: Download/Build protobuf
      run: |
        curl -L https://github.com/protocolbuffers/protobuf/releases/download/v21.6/protobuf-all-21.6.zip --output protobuf.zip
        7z x protobuf.zip
        cd protobuf-21.6
        mkdir cmake\solution
        cd cmake\solution
        cmake -DBUILD_SHARED_LIBS=TRUE -G "Visual Studio 17" -A x64 ..

        msbuild libprotobuf.vcxproj /p:Configuration=Release
        msbuild libprotobuf.vcxproj /p:Configuration=Debug
        msbuild libprotoc.vcxproj /p:Configuration=Release
        msbuild libprotoc.vcxproj /p:Configuration=Debug
        msbuild protoc.vcxproj /p:Configuration=Release
        msbuild protoc.vcxproj /p:Configuration=Debug
        msbuild libprotobuf-lite.vcxproj /p:Configuration=Release
        msbuild libprotobuf-lite.vcxproj /p:Configuration=Debug


      working-directory: tmp/protobuf


    - name: Build Boost
      id: boost
      uses: egor-tensin/build-boost@v1
      with:
        version: 1.79.0
        libraries: system filesystem thread regex date_time program_options python chrono
        platform: x64
        configuration: Release

    - name: Show paths
      run: |
        echo "${{ steps.boost.outputs.root }}"
        echo "${{ steps.boost.outputs.librarydir }}"
      shell: cmd

    - id: boost-root
      uses: spearuav/unixify-action@v0.1
      with:
        path: ${{ steps.boost.outputs.root }}
    - id: boost-lib
      uses: spearuav/unixify-action@v0.1
      with:
        path: ${{ steps.boost.outputs.librarydir }}
    - id: python-path
      uses: spearuav/unixify-action@v0.1
      with:
        path: ${{ steps.python.outputs.python-path }}
        
    - name: Show paths
      run: |
        echo "${{ steps.boost-root.outputs.path }}"
        echo "${{ steps.boost-lib.outputs.path }}"
      shell: cmd
    
   

    - uses: DamianReeves/write-file-action@master
      with:
        path: tmp/nscp/build.cmake
        contents: |
            set(Boost_USE_STATIC_LIBS ON)
            set(Boost_USE_STATIC_RUNTIME ON)

            SET(USE_STATIC_RUNTIME FALSE)
            SET(LIBRARY_ROOT_FOLDER	"${{ env.GITHUB_WORKSPACE }}")
            SET(BOOST_ROOT "${{ steps.boost-root.outputs.path }}")
            SET(BOOST_LIBRARYDIR "${{ steps.boost-lib.outputs.path }}")
            SET(PROTOBUF_ROOT "tmp/protobuf/protobuf-21.6")
            SET(OPENSSL_ROOT_DIR "${LIBRARY_ROOT_FOLDER}/openssl-1.1.1q")
            SET(LUA_SOURCE_ROOT "${LIBRARY_ROOT_FOLDER}/lua-5.1.5")
            SET(BREAKPAD_ROOT "${LIBRARY_ROOT_FOLDER}/${breakpad_rel_folder}")
            SET(PYTHON_ROOT "${{ steps.python-path.outputs.path }}")
            SET(CRYPTOPP_ROOT "${LIBRARY_ROOT_FOLDER}/CRYPTOPP_8_0_0")

            #SET(CSHARP_DOTNET_VERSION "v4.0.30319")
            #SET(ARCHIVE_FOLDER "TODO")
            #SET(TARGET_SITE "TODO")
  
    - run: |
        cd tmp
        cd nscp
        cmake ../..